name: Deploy to Server
on:
  push:
    branches:
      - main  # Деплой при пуше в main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          
      - name: Build Frontend
        run: |
          cd front-end
          npm install
          npm run build
          
      - name: Debug directory structure
        run: |
          ls -la
          ls -la front-end/ || echo "front-end directory not found"
          ls -la front-end/dist/ || echo "dist directory not found"
      
      # Устанавливаем SSH-ключ
      - name: Install SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # Подключение к серверу и деплой
      - name: Deploy to Server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          
          # 1️⃣ Переходим в директорию проекта
          cd /deploy/platonus-api-tracing-project
          
          # 2️⃣ Обновляем репозиторий
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S git fetch origin
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S git reset --hard origin/main
          
          # 3️⃣ Устанавливаем переменные среды
          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
          
          # 4️⃣ Ставим права на gradlew
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ./auth-api/gradlew
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ./docs-api/gradlew
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ./api-gateway/gradlew
          
          # 5️⃣ Сборка и деплой сервисов
          
          # Auth API
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ./auth-api/gradlew -p ./auth-api clean build -x test
          AUTH_JAR=$(find ./auth-api/build/libs/ -name "*.jar" | head -1)
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp "$AUTH_JAR" /app/auth-api/auth-api.jar
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod 777 /app/auth-api/auth-api.jar
          
          # Docs API
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ./docs-api/gradlew -p ./docs-api clean build -x test
          DOCS_JAR=$(find ./docs-api/build/libs/ -name "*.jar" | head -1)
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp "$DOCS_JAR" /app/docs-api/docs-api.jar
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod 777 /app/docs-api/docs-api.jar
          
          # API Gateway
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ./api-gateway/gradlew -p ./api-gateway clean build -x test
          GATEWAY_JAR=$(find ./api-gateway/build/libs/ -name "*.jar" | head -1)
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp "$GATEWAY_JAR" /app/api-gateway/api-gateway.jar
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod 777 /app/api-gateway/api-gateway.jar
          
          # 6️⃣ Сборка фронта прямо на сервере
          cd front-end
          npm install
          npm run build
          
          # 7️⃣ Копирование фронта
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S rm -rf /app/main-ui/*
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp -r dist/* /app/main-ui/
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod -R 777 /app/main-ui/
          
          # 8️⃣ Перезапуск Supervisor
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl reread
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl update
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl restart all
          EOF
