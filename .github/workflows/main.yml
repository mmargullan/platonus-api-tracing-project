name: Deploy to Server
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Frontend
        run: |
          cd front-end
          npm install
          npm run build
        shell: bash

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{secrets.SSH_PORT}} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
        shell: bash

      - name: Verify SSH Connection
        run: |
          ssh -v -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              -p ${{secrets.SSH_PORT}} \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
              "whoami && pwd && uname -a"
        shell: bash

      - name: Deploy to Server
        run: |
          ssh -i ~/.ssh/id_rsa \
              -o StrictHostKeyChecking=no \
              -p ${{secrets.SSH_PORT}} \
              ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          set -x  # Enable debug mode
          
          # Установка максимальных прав для директории проекта
          sudo -S chown -R $USER:$USER /deploy/platonus-api-tracing-project
          sudo -S chmod -R 777 /deploy/platonus-api-tracing-project
          
          # Переход в директорию проекта
          cd /deploy/platonus-api-tracing-project
          
          # Очистка директорий сборки с максимальными правами
          sudo -S rm -rf ./auth-api/build
          sudo -S rm -rf ./docs-api/build
          sudo -S rm -rf ./api-gateway/build
          
          # Обновление проекта с максимальными правами
          sudo -S git config --global --add safe.directory /deploy/platonus-api-tracing-project
          sudo -S git fetch origin
          sudo -S git reset --hard origin/main
          
          # Установка переменных окружения
          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
          
          # Установка прав на градлew
          sudo -S chmod +x ./auth-api/gradlew
          sudo -S chmod +x ./docs-api/gradlew
          sudo -S chmod +x ./api-gateway/gradlew
          
          # Сборка и деплой сервисов с максимальными правами
          # Auth API
          sudo -S ./auth-api/gradlew -p ./auth-api build -x test
          sudo -S cp ./auth-api/build/libs/auth-api-0.0.1-SNAPSHOT.jar /app/auth-api/auth-api-0.0.1-SNAPSHOT.jar
          sudo -S chmod 777 /app/auth-api/auth-api-0.0.1-SNAPSHOT.jar
          
          # Docs API
          sudo -S ./docs-api/gradlew -p ./docs-api build -x test
          sudo -S cp ./docs-api/build/libs/docs-api-0.0.1-SNAPSHOT.jar /app/docs-api/docs-api-0.0.1-SNAPSHOT.jar
          sudo -S chmod 777 /app/docs-api/docs-api-0.0.1-SNAPSHOT.jar
          
          # API Gateway
          sudo -S ./api-gateway/gradlew -p ./api-gateway build -x test
          sudo -S cp ./api-gateway/build/libs/api-gateway-0.0.1-SNAPSHOT.jar /app/api-gateway/api-gateway-0.0.1-SNAPSHOT.jar
          sudo -S chmod 777 /app/api-gateway/api-gateway-0.0.1-SNAPSHOT.jar
          
          # Front-End
          sudo -S rm -rf /app/main-ui/*
          sudo -S cp -r ./front-end/dist/* /app/main-ui/
          sudo -S chmod -R 755 /app/main-ui/
          
          # Перезапуск сервисов
          sudo -S supervisorctl reread
          sudo -S supervisorctl update
          sudo -S supervisorctl restart all
          EOF
        shell: bash
