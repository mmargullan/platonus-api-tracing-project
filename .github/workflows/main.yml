name: Deploy to Server
on:
  push:
    branches:
      - main  # Деплой при пуше в main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Build Frontend
        run: |
          cd front-end
          npm install
          npm run build
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{secrets.SSH_PORT}} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to Server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p ${{secrets.SSH_PORT}} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          # Переходим в директорию проекта
          cd /deploy/platonus-api-tracing-project
          # Используем правильный формат для передачи пароля в sudo
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S git fetch origin
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S git reset --hard origin/main
          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
          # Изменяем права с sudo
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ./auth-api/gradlew
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ./docs-api/gradlew
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod +x ./api-gateway/gradlew
          

          # Запускаем gradlew с sudo и перемещаем файлы

          # Auth API

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ./auth-api/gradlew -p ./auth-api clean build -x test

          AUTH_JAR=$(echo "${{ secrets.SSH_PASSWORD }}" | sudo -S find ./auth-api/build/libs/ -name "*.jar" | head -1)

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp ./auth-api/build/libs/auth-api-0.0.1-SNAPSHOT.jar /app/auth-api/auth-api-0.0.1-SNAPSHOT.jar

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod 777 /app/auth-api/auth-api-0.0.1-SNAPSHOT.jar

          

          # Docs API

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ./docs-api/gradlew -p ./docs-api clean build -x test

          DOCS_JAR=$(echo "${{ secrets.SSH_PASSWORD }}" | sudo -S find ./docs-api/build/libs/ -name "*.jar" | head -1)

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp ./docs-api/build/libs/docs-api-0.0.1-SNAPSHOT.jar /app/docs-api/docs-api-0.0.1-SNAPSHOT.jar

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod 777 /app/docs-api/docs-api-0.0.1-SNAPSHOT.jar

          

          # API Gateway

          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S ./api-gateway/gradlew -p ./api-gateway clean build -x test
          GATEWAY_JAR=$(echo "${{ secrets.SSH_PASSWORD }}" | sudo -S find ./api-gateway/build/libs/ -name "*.jar" | head -1)
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp ./api-gateway/build/libs/api-gateway-0.0.1-SNAPSHOT.jar /app/api-gateway/api-gateway-0.0.1-SNAPSHOT.jar
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod 777 /app/api-gateway/api-gateway-0.0.1-SNAPSHOT.jar

          # Front-End
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S rm -rf /app/main-ui/*  # Удаляем старые файлы
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S cp -r ./front-end/dist/* /app/main-ui/
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod -R 755 /app/main-ui/

          # Перезапускаем сервисы
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl reread
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl update
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl restart all

          EOF
