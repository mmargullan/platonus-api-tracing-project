name: Deploy to Server
on:
  push:
    branches:
      - main
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p 17853 -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to Server
        run: |
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no -p 17853 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          cd /deploy/platonus-api-tracing-project || exit 1
          
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chown -R $USER:$USER /deploy/platonus-api-tracing-project
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S chmod -R 777 /deploy/platonus-api-tracing-project

          export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64
          
          sudo chmod +x ./auth-api/gradlew ./docs-api/gradlew ./api-gateway/gradlew
          
          ./auth-api/gradlew -p ./auth-api clean build -x test
          sudo mkdir -p /app/auth-api
          sudo cp -f ./auth-api/build/libs/*.jar /app/auth-api/auth-api-0.0.1-SNAPSHOT.jar
          
          ./docs-api/gradlew -p ./docs-api clean build -x test
          sudo mkdir -p /app/docs-api
          sudo cp -f ./docs-api/build/libs/*.jar /app/docs-api/docs-api-0.0.1-SNAPSHOT.jar
          
          ./api-gateway/gradlew -p ./api-gateway clean build -x test
          sudo mkdir -p /app/api-gateway
          sudo cp -f ./api-gateway/build/libs/*.jar /app/api-gateway/api-gateway-0.0.1-SNAPSHOT.jar
          
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl reread
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl update
          echo "${{ secrets.SSH_PASSWORD }}" | sudo -S supervisorctl restart all
          EOF

